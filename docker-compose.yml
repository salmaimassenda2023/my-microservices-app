version: '3.8'

services:
  # ==========================================
  # INFRASTRUCTURE
  # ==========================================

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "22181:2181"
    networks:
      - microservices-net
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - microservices-net

  # ==========================================
  # DATABASES
  # ==========================================

  postgresql:
    container_name: postgresql
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgresql:/data/postgres
    networks:
      - microservices-net
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - microservices-net
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: salma@admin.org
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: 'False'

  mongo:
    container_name: mongo
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - microservices-net
    volumes:
      - mongo:/data/db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - microservices-net
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root

# ==========================================
# NETWORKS
# ==========================================
networks:
  microservices-net:
    driver: bridge

# ==========================================
# VOLUMES
# ==========================================
volumes:
  postgresql:
  pgadmin:
  mongo: